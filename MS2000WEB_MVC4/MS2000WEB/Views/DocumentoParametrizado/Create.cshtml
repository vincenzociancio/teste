@model MS2000WEB.Models.Documentos_Relatorios_parametrizacao

@{
    ViewBag.Title = "Documentos Parametrizados";
}


<h2>Documentos Parametrizados</h2>

@using (Html.BeginForm("Create", "DocumentoParametrizado", FormMethod.Post, new { @class = "form-stacked" }))
{
@*<fieldset>*@
    @Html.HiddenFor(m => m.DocID, new { @id = "DocID" })
    <legend>Criar</legend>@*
    <div class="alert alert-error">
        <button type="button" class="close" data-dismiss="alert">&times;</button>
        @Html.ValidationSummary(true, "(*) Campos Obrigatórios")
    </div>  
       
    *@<div class="editor-label">
        @Html.LabelFor(model => model.Titulo)
    </div>
    <div class="editor-field">
        @Html.EditorFor(model => model.Titulo, new { id = "Titulo" }) 
        @Html.ValidationMessageFor(model => model.Titulo)
    </div>

    <div class="editor-label">
        @Html.LabelFor(model => model.ImportadorCgcCpf)
    </div>
    <div class="editor-field">
        @Html.DropDownList("ImportadorCgcCpf", string.Empty)
        @Html.ValidationMessageFor(model => model.ImportadorCgcCpf)
    </div>

    <div class="editor-label">
        @Html.LabelFor(model => model.Vencimento)
    </div>
    <div class="editor-field">
        @Html.DropDownList("Vencimento", new[]{
           new SelectListItem{Text = "1 à 10 - Diário" ,Value = "1"},
           new SelectListItem{Text = "11 à 30 - Semanal" ,Value = "2"},
           new SelectListItem{Text = "31 à 180 - Mensal" ,Value = "3"}
           }, "Selecione")
        @Html.ValidationMessageFor(model => model.Vencimento)
    </div>

    <div class="editor-label">
        @Html.LabelFor(model => model.Email)
    </div>
    <div class="editor-field">
        @Html.EditorFor(model => model.Email)
        @Html.ValidationMessageFor(model => model.Email)
    </div>


@* -------------Status---------- *@
    <div class="row">
        <div class="span3">
            <legend>Status</legend>
            @{                        
    List<MS2000WEB.ViewModels.DocumentoParametrizadoStatusViewModel> status = ViewBag.Status;

    foreach (var item in status)
    {             
                
                <input type="checkbox" 
                                name="selectedStatus" 
                            class="checkbox"
                                value="@item.StatusID" 
                                @(Html.Raw(item.Ativo ? "checked=\"checked\"" : "")) />
                @item.DescricaoStatus
                <br />
    }
                                                 
            }
        </div>

        @*----------------Tipo Documentos-----------------*@
        <div class="span4">
            <legend>Selecione os documetos</legend>

            <label class="control-label" for="CampoTipoDocumento">Tipos de Documentos</label>
            <div class="controls">
                @* @Html.DropDownList("ddlTipo", (SelectList)ViewBag.Tipo, "Selecione", new { onchange = "buscarSubtipo();", data_bind = "value: SubTipo"})*@
                @Html.DropDownList("TiposDocumentos", (SelectList)ViewData["TiposDocumentos"], "Selecione", new { data_bind = "value: Tipo" })
            </div>
            <br />
            <label class="control-label" for="CampoTipoDocumento">Sub-Tipo de Documento</label>
            <div class="controls">
                @*  <p data-bind="visible: subTipo().length > 0">
                    <select data-bind=" options: subTipo, optionsText: 'Descricao', optionsValue: 'Codigo', optionsCaption:'Selecione'"></select>
                </p>*@

                <select id="ddSubtipo" name="ddSubtipo" data-bind=" value: SubTipo"></select>
            </div>
            <br />
            <div class="controls">
                <input class="btn btn-inverse" type="button" data-bind="click: adicionarDocumento" value="Incluir" />
                @*       <button id="addDoc" class="btn btn-inverse">Incluir</button>*@
            </div>
            <br />
            <div>
                <label style="color: black"><strong>Descrição</strong></label>
                <table style="border: 1px solid black">
                    <tbody data-bind="foreach: Documentos">
                        <tr style="border: 1px solid black">
                            @* <td>
                                <input style="border-width: 0; border-color: transparent"  color:"red" type="text"   data-bind="value: Descricao" />                                
                            </td>*@
                            <td style="border: 1px solid black">
                                  <strong><input style="border-width: 0; border-color: transparent; width:400px" disabled="disabled" color:"black" type="label"  data-bind="value: Descricao" /></strong>
                            </td>
                            <td style="border: 1px solid black">
                                <a href='#' data-bind='click: MeuModelo.removerDocumento'>Deletar</a>
                            </td>
                        </tr>
                    </tbody>
                </table>

            </div>
            <br />
            <br />
            @*   <div id="divDocumentos">
                @{Html.RenderAction("PopulateSubTipoListBox", "DocumentoParametrizado", new { id = Model.DocID });}
            </div>*@
        </div>
    </div>  

    <div class="form-actions">
          @* <button id="btnSalvar" type="submit" class="btn btn-inverse" data-bind="click: MeuModelo.btnSalvar" >Salvar</button>*@
         <button id="btnSalvar" type="submit" class="btn btn-inverse" onclick="SubTipo()" >Salvar</button>            
        @Html.ActionLink("Cancelar", "index", null, new { @class = "btn" , id="RemoveDoc",onclick="RemoveDoc()"})
    </div>
}

<script type="text/javascript">


    //function CascadingDDLViewModel() {
    //    this.subTipo = ko.observableArray([]);
    //}
    //var objVM = new CascadingDDLViewModel();
    //ko.applyBindings(objVM);


    //function buscarSubtipo() {            
    //    var codTipo = $("#ddlTipo").val();
    //    $.getJSON("/DocumentoParametrizado/GetSubTipo/" + codTipo, null, function (data) {
    //        objVM.subTipo(data);
    //    });
    //

    function getSubtipo(param) {
        //$.getJSON("/DocumentoParametrizado/PopulateSubTipoDropDownList",
        //    { tipoID: param },
        //    function (data) {
        //        var items = "<option value=''>Selecione</option>";
        //        $.each(data, function (i, item) {
        //            items += "<option  value=\"" + item.Value + "\">" + item.Text + "</option>";
        //        });
        //        $("#ddSubtipo").html(items).val(0);
        //    }
        //);
        $.get("@Url.Action("PopulateSubTipoDropDownList")",
             { tipoID: param },
             function (data) {
                 var items = "<option value=''>Selecione</option>";
                 $.each(data, function (i, item) {
                     items += "<option  value=\"" + item.Value + "\">" + item.Text + "</option>";
                 });
                 $("#ddSubtipo").html(items).val(0);
             }
            );
    }

    $(document).ready(function () {
        $("#TiposDocumentos").change(function () {
            var param = $("#TiposDocumentos").val();
            getSubtipo(param);
        });

        $("#remove").click(function (e) {
            $('#SubTipoListParams').find('option:selected').remove();
        });

        $('#addDoc').click(function () {
            var SelectedDoc = $("#TiposDocumentos option:selected").val();
            var SelectedSub = $("#ddSubtipo option:selected").val();
            var doc = $("#DocID").val();
            $.ajax({
                url:'@Url.Action("IncluirDocumento")',
                type: "GET",
                dataType: "json",
                data: ({ docID: doc, tipo: SelectedDoc, subTipo: SelectedSub }),
                success: function (provinces) {
                    //$("#TiposDocumentos").find('option').remove();
                }
            });

        });
    });

    function RemoveDoc() {
        var doc = $("#DocID").val();
           $.ajax({
            type: "POST",
            contentType: "application/json",
            url:'@Url.Action("CancelarDocId")',
            data: JSON.stringify({ docID: doc }),
            traditional: true
        });
    }

    var MeuModelo = {
        Tipo: ko.observable(),
        SubTipo: ko.observable(),
        Descricao: ko.observable(),
        Documentos: ko.observableArray([]),

        adicionarDocumento: function () {
            var Desc = $("#ddSubtipo option:selected").html();
            this.Documentos.push({ Tipo_Doc: this.Tipo(), Sub_Tipo_Doc: this.SubTipo(), Descricao: Desc })
            this.Tipo("");
            this.SubTipo("");
            this.Descricao("");

            $("#ddSubtipo").empty();
        }
        , removerDocumento: function (documentos) {
            MeuModelo.Documentos.remove(documentos);
        }
    };

    ko.applyBindings(MeuModelo);

    function SubTipo() {
        var dados = ko.toJS(MeuModelo.Documentos);
        $.ajax({
            type: "POST",
            contentType: "application/json",
            url:'@Url.Action("SalvarSubtipo")',               
            data: JSON.stringify({ documentos: dados }),
            traditional: true
        });
    }
    

</script>
